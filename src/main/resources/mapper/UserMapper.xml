<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.y4j.final_project.user.service.UserMapper">

	<!-- 회원가입 -->
	<insert id="registUser" parameterType="com.y4j.final_project.command.UserVO">
		insert into users(

		user_id,
		user_pw,
		user_name,
		user_birth,
		user_contact,
		user_zipcode,
		user_address,
		user_email,
		user_gender,
		user_fav_ent)

		values(

		#{user_id},
		#{user_pw},
		#{user_name},
		#{user_birth},
		#{user_contact},
		#{user_zipcode},
		#{user_address},
		#{user_email},
		#{user_gender},
		#{user_fav_ent})
	</insert>


	<!-- 회원가입 시 아이디 중복검사 및 로그인 아이디 확인 -->
	<select id="idCheck" parameterType="String" resultType="Integer">
		select count(user_id) from users
		WHERE user_id= #{user_id}
	</select>

	<!-- 로그인 시 암호화한 비밀번호 확인 -->
	<select id="login" resultType="String">
		select user_pw from users where
		user_id=#{user_id}
	</select>

	<!-- 아이디 찾기 -->
	<select id="getUserId" resultType="UserVO">
		select * from users where
		user_name=#{user_name} and
		user_email=#{user_email}
	</select>

	<!-- 회원정보 수정 -->
	<update id="updateUserInfo" parameterType="UserVO">
		update users set

		user_pw = #{user_pw},
		user_pw2 =
		#{user_pw2},
		user_name = #{user_name},
		user_birth = #{user_birth},
		user_contact = #{user_contact},
		user_address = #{user_address},
		user_email = #{user_email},
		user_gender
		= #{user_gender},
		user_fav_ent = #{user_fav_ent}

		where user_id = #{user_id}
	</update>

	<!-- -->
	<select id="getUserList" resultType="UserVO">
		select * from users where
		user_name like concat('%',
		#{searchValue}, '%')
		order by user_no desc
		limit #{pageStart}, #{amount}
	</select>

	<select id="getUserTotal" resultType="Integer">
		select count(*) from users
		where user_name like
		concat('%', #{searchValue}, '%')
	</select>

	<!-- 유저 특정 1명 데이터 반환 메서드 -->
	<select id="getUserInfo" resultType="UserVO">
		select * from users where
		user_no = #{user_no}
	</select>

	<!-- 유저 특정 1명 데이터 반환 메서드 -->
	<select id="getUserInfo2" resultType="UserVO">
		select * from users where
		user_id = #{user_id}
	</select>

	<!-- ////////////////////////////////////////////////////////////////////// -->

	<!-- 장바구니 상품 추가 아 모르겠다 -->
	<!-- <insert id="addCart" parameterType="CartVO"> insert into( cart_prod_no, cart_prod_img_path, cart_prod_artist, 
		cart_prod_name, cart_prod_cnt, cart_prod_discount_rate, cart_prod_price) values (ran()*10000000, #{cart_prod_image_path}, 
		#{cart_prod_artist}, #{cart_prod_name}, #{cart_prod_cnt}, #{cart_prod_discount_rate}, #{cart_prod_price}) 
		where user_id=#{user_id} </insert> -->
		
		<!-- 유저의 주문하기 -> 결제창 주문 상세정보 아 이것도 모르겠어~~ -->
	<!-- 장바구니 담기 -->
   <insert id="addCart" >
      insert into cart(
            cart_prod_img_path,
            cart_prod_name,
            cart_prod_cnt,
            cart_prod_price,
            user_id
         )
      values(
            #{cart_prod_img_path},
            #{cart_prod_name},
            #{cart_prod_cnt},
            #{cart_prod_price},
            #{user_id}
      )
 
   </insert>

	<!-- 장바구니 상품 조회(product) -->
	<select id="getCartList" resultType="CartVO">
		select 
		c.cart_no, 
		c.cart_prod_no, 
		c.cart_prod_img_path, 
		c.cart_prod_name, 
		c.cart_prod_cnt, 
		c.cart_prod_price 
		from cart c 
		where c.user_id = #{user_id} 
		order by	c.cart_no
	</select>

	<!-- 유저의 장바구니 상품 삭제 - 개별, 선택 -->
	<delete id="deleteCartOne" parameterType="Integer">
		delete from cart where cart_no = #{cart_no}
	</delete>

	
</mapper>